head	1.2;
access;
symbols
	r1:1.1.1.1 mhelal:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2008.05.11.13.55.54;	author mhelal;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.06.02.40.53;	author mhelal;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.05.06.02.40.53;	author mhelal;	state Exp;
branches;
next	;


desc
@@


1.2
log
@search space error
@
text
@/**********************************************************
* Author: Manal Helal																			*
* Last Modification Date: Fri 12 Jan 2007 03:39:51 AM EST *
* Project : MMSA - Multiple Sequence Alignment Based on 	*
* 					Mathematics of Arrays - PhD Experimentation		*
* File: globals.h, header file for all global variables		*
***********************************************************/
#ifndef GLOBALSH_
#define GLOBALSH_

#include <time.h>

#define GAPCHAR '-' 
#define LONG_MESSAGE_SIZE 1000 
#define MID_MESSAGE_SIZE 500 
#define SHORT_MESSAGE_SIZE 200 
/* Temporary variables to print all parts in waves whether valid or not*/
long * AllpartsInWave, * * AllpartsInWaveIndices, AllPartOrder;
long partitionSize, partsTotal, duplicatesTotal, wavesTotal, currWaveNo, currPartNo, * partsInWave, * * partsInWaveIndices;
//int outfile;
FILE * outfile1;
FILE * outfile2;
FILE * outfile3;
struct tm * prevNow, * currNow;

int pdebug, threadnum;
int RestoreFlag, TBFlag; /*Scoring Restoration and Trace Back Flags*/
int maxAlignmentsNumber;
int Epsilons;
char outputfilename[SHORT_MESSAGE_SIZE];
char outPrefix[5];
enum ModeEnum {Sequential, Distributed};
enum ModeEnum Mode;
enum AlignmentTypeEnum {Global, Local};
enum AlignmentTypeEnum AlignmentType;

enum SchedulingMethod {RR, BT, DB}; /* Bag of Tasks, Round Robin, Dependency Based */
enum SchedulingMethod SchedMethod;

int myProcid;/*My Process ID*/
int ClusterSize;/*size of computing cluster*/
#define MOAMSA_SEND_RECEIVE_TAG 1
/* MOAMSA_SEND_RECEIVE_TAG is message type (tag) for MPI_Send and MPI_Recv*/

#endif
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
long partsTotal, duplicatesTotal, wavesTotal, currWaveNo, currPartNo, * partsInWave, * * partsInWaveIndices;
@


1.1.1.1
log
@Distributed Optimal MSA using MoA
@
text
@@
